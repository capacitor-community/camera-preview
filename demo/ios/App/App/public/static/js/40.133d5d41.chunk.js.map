{"version":3,"sources":["../../../src/web.ts"],"names":[],"mappings":"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","file":"static/js/40.133d5d41.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class CameraPreviewWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'CameraPreview',\n            platforms: ['web'],\n        });\n    }\n    async start(options) {\n        return new Promise(async (resolve, reject) => {\n            await navigator.mediaDevices\n                .getUserMedia({\n                audio: !options.disableAudio,\n                video: true,\n            })\n                .then((stream) => {\n                // Stop any existing stream so we can request media with different constraints based on user input\n                stream.getTracks().forEach((track) => track.stop());\n            })\n                .catch((error) => {\n                reject(error);\n            });\n            const video = document.getElementById('video');\n            const parent = document.getElementById(options.parent);\n            if (!video) {\n                const videoElement = document.createElement('video');\n                videoElement.id = 'video';\n                videoElement.setAttribute('class', options.className || '');\n                // Don't flip video feed if camera is rear facing\n                if (options.position !== 'rear') {\n                    videoElement.setAttribute('style', '-webkit-transform: scaleX(-1); transform: scaleX(-1);');\n                }\n                const userAgent = navigator.userAgent.toLowerCase();\n                const isSafari = userAgent.includes('safari') && !userAgent.includes('chrome');\n                // Safari on iOS needs to have the autoplay, muted and playsinline attributes set for video.play() to be successful\n                // Without these attributes videoElement.play() will throw a NotAllowedError\n                // https://developer.apple.com/documentation/webkit/delivering_video_content_for_safari\n                if (isSafari) {\n                    videoElement.setAttribute('autoplay', 'true');\n                    videoElement.setAttribute('muted', 'true');\n                    videoElement.setAttribute('playsinline', 'true');\n                }\n                parent.appendChild(videoElement);\n                if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                    const constraints = {\n                        video: {\n                            width: { ideal: options.width },\n                            height: { ideal: options.height },\n                        },\n                    };\n                    if (options.position === 'rear') {\n                        constraints.video.facingMode = 'environment';\n                        this.isBackCamera = true;\n                    }\n                    else {\n                        this.isBackCamera = false;\n                    }\n                    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n                        //video.src = window.URL.createObjectURL(stream);\n                        videoElement.srcObject = stream;\n                        videoElement.play();\n                        resolve({});\n                    }, (err) => {\n                        reject(err);\n                    });\n                }\n            }\n            else {\n                reject({ message: 'camera already started' });\n            }\n        });\n    }\n    async startRecordVideo() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async stopRecordVideo() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async stop() {\n        const video = document.getElementById('video');\n        if (video) {\n            video.pause();\n            const st = video.srcObject;\n            const tracks = st.getTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                track.stop();\n            }\n            video.remove();\n        }\n    }\n    async capture(options) {\n        return new Promise((resolve, _) => {\n            const video = document.getElementById('video');\n            const canvas = document.createElement('canvas');\n            // video.width = video.offsetWidth;\n            const context = canvas.getContext('2d');\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            // flip horizontally back camera isn't used\n            if (!this.isBackCamera) {\n                context.translate(video.videoWidth, 0);\n                context.scale(-1, 1);\n            }\n            context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n            let base64EncodedImage;\n            if (options.quality != undefined) {\n                base64EncodedImage = canvas\n                    .toDataURL('image/jpeg', options.quality / 100.0)\n                    .replace('data:image/jpeg;base64,', '');\n            }\n            else {\n                base64EncodedImage = canvas.toDataURL('image/png').replace('data:image/png;base64,', '');\n            }\n            resolve({\n                value: base64EncodedImage,\n            });\n        });\n    }\n    async captureSample(_options) {\n        return this.capture(_options);\n    }\n    async getSupportedFlashModes() {\n        throw new Error('getSupportedFlashModes not supported under the web platform');\n    }\n    async setFlashMode(_options) {\n        throw new Error('setFlashMode not supported under the web platform');\n    }\n    async flip() {\n        throw new Error('flip not supported under the web platform');\n    }\n    async setOpacity(_options) {\n        const video = document.getElementById('video');\n        if (!!video && !!_options['opacity']) {\n            video.style.setProperty('opacity', _options['opacity'].toString());\n        }\n    }\n}\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}